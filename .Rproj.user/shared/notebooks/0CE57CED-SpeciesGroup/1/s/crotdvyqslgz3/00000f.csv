"0","# 4. High Cardinality Variables: Frequency Encoding"
"0","# -- Based *only* on training set statistics to prevent data leakage"
"0","# Calculate frequencies"
"0","state_freq <- prop.table(table(train_data$state_territory))"
"0","ibra_freq <- prop.table(table(train_data$ibra_region))"
"0",""
"0","# Safe mapping function (handles categories unseen in the test set)"
"0","map_freq_safe <- function(x, freq_table) {"
"0","  x_char <- as.character(x)"
"0","  mapped <- ifelse(x_char %in% names(freq_table),"
"0","    freq_table[x_char],"
"0","    min(freq_table, na.rm = TRUE)"
"0","  ) # Fill unseen categories with the minimum frequency"
"0","  as.numeric(mapped)"
"0","}"
"0",""
"0","# Apply Frequency Encoding"
"0","train_data$state_territory_freq <- map_freq_safe(train_data$state_territory, state_freq)"
"0","train_data$ibra_region_freq <- map_freq_safe(train_data$ibra_region, ibra_freq)"
"0",""
"0","test_data$state_territory_freq <- map_freq_safe(test_data$state_territory, state_freq)"
"0","test_data$ibra_region_freq <- map_freq_safe(test_data$ibra_region, ibra_freq)"
"0",""
"0","# Remove original high cardinality factor columns"
"0","train_data <- train_data %>% select(-state_territory, -ibra_region)"
"0","test_data <- test_data %>% select(-state_territory, -ibra_region)"
